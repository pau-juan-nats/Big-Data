from mrjob.job import MRJob
from datetime import datetime

class TweetAnalysis(MRJob):

    def mapper(self, _, line):
        tweet = line.strip().split("\t")  
        epoch_time = int(tweet[0]) / 1000  
        tweet_minute = datetime.utcfromtimestamp(epoch_time).strftime('%Y-%m-%d %H:%M')  
        yield(tweet_minute, 1)

    def reducer(self, tweet_minute, counts):
        total_tweets = sum(counts)
        yield None, (tweet_minute, total_tweets)

    def reducer_find_most_popular_minute(self, _, minutes_and_counts):
        most_popular_minute = None
        max_tweets = 0
        for minute, tweets in minutes_and_counts:
            if tweets > max_tweets:
                max_tweets = tweets
                most_popular_minute = minute
        yield most_popular_minute, max_tweets

if __name__ == "__main__":
    TweetAnalysis().run()
